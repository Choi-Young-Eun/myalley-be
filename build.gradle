plugins {
	id 'java'
	id 'org.springframework.boot' version '2.6.11'
	id 'io.spring.dependency-management' version '1.1.0'
	id "org.asciidoctor.jvm.convert" version "3.3.2"
	id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}

group = 'com'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	asciidoctorExtensions
	querydsl.extendsFrom compileClasspath
}

repositories {
	mavenCentral()
}

ext {
	// 사용할 변수 선언
	set('snippetsDir', file("build/generated-snippets"))
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'
	implementation 'org.apache.tika:tika-core:2.6.0'
	implementation 'org.mapstruct:mapstruct:1.4.2.Final' //mapstruct 추가

	// querydsl 추가
	implementation 'com.querydsl:querydsl-jpa:5.0.0'
	implementation 'com.querydsl:querydsl-apt:5.0.0'

	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'mysql:mysql-connector-java'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.4.2.Final' //mapstruct 추가
	testImplementation 'org.springframework.boot:spring-boot-starter-test'


	implementation 'com.auth0:java-jwt:3.19.2'
	implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.2'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.2'
	runtimeOnly 'mysql:mysql-connector-java'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	testImplementation 'org.springframework.security:spring-security-test'
	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-validation', version: '2.5.2'
	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
	testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'

	implementation 'com.google.code.gson:gson:2.8.7'
}

//* QueryDsl Start */
def querydslSrcDir = "$buildDir/generated/querydsl"

querydsl {
	jpa = true
	querydslSourcesDir = querydslSrcDir
}

sourceSets {
	main.java.srcDir querydslSrcDir
}

compileQuerydsl {
	options.annotationProcessorPath = configurations.querydsl
}
/* QueryDsl End */

jar {
	enabled = false
}

test {
	outputs.dir snippetsDir
	useJUnitPlatform()
}

asciidoctor {
	configurations 'asciidoctorExtensions'
	sources{
		include("**/index.adoc","**/common/*.adoc")
	}

	baseDirFollowsSourceFile()
	inputs.dir snippetsDir
	dependsOn test
}

asciidoctor.doFirst {
	delete file('src/main/resources/static/docs')
}

task createDocument(type: Copy) {
	dependsOn asciidoctor

	from file("build/docs/asciidoc")
	into file("src/main/resources/static/docs")
}

build {
	dependsOn createDocument
}

bootJar {
	archiveFileName = 'myalley.jar'
}